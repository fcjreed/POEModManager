{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/components/app.login.html","webpack:///./src/components/app.login.ts","webpack:///./src/components/app.modtab.html","webpack:///./src/components/app.modtab.ts","webpack:///./src/components/modtab.available.html","webpack:///./src/components/modtab.available.ts","webpack:///./src/components/modtab.installed.html","webpack:///./src/components/modtab.installed.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/model/mod.ts","webpack:///./src/services/data.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n\\t<h1>Path of Exile Mod Manager</h1>\\n</div>\\n<router-outlet></router-outlet>\\n<div\\n    *ngIf=\\\"isShowingRouteLoadIndicator\\\"\\n    class=\\\"router-load-indicator\\\">\\n    Loading Module\\n</div>\"","import { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\n\nconst httpOptions = {\n\theaders: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styles: []\n})\nexport class AppComponent {\n\tpublic isShowingRouteLoadIndicator: boolean;\n\tconstructor(private http: HttpClient, private router: Router) {\n\t\tthis.isShowingRouteLoadIndicator = true;\n\t}\n\n\tngOnInit() {\n\t\tthis.http.post(\"/verifyAccess\", {}, httpOptions).subscribe( data => this.validateResponse(data));\n\t}\n\n\tvalidateResponse(response) {\n\t\tthis.isShowingRouteLoadIndicator = false;\n\t\tif (response.status != 0) {\n\t\t\tthis.router.navigate([\"login\"]);\n\t\t}\n\t\telse {\n\t\t\tthis.router.navigate([\"modtab\"]);\n\t\t}\n\t}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from '../components/app.login';\nimport { ModTabComponent } from '../components/app.modtab';\nimport { ModTabInstalledComponent } from '../components/modtab.installed';\nimport { ModTabAvailableComponent } from '../components/modtab.available';\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { DataService } from '../services/data.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n\nconst routes = [\n\t{ path: '', component: AppComponent },\n\t{ path: 'login', component: LoginComponent },\n  { path: 'modtab', \n    component: ModTabComponent,\n    children: [\n      { path: '', component: ModTabInstalledComponent },\n      { path: 'modAvailable', component: ModTabAvailableComponent }\n    ]\n  }\n]\n\n@NgModule({\n  declarations: [\n  \tAppComponent,\n\t  LoginComponent,\n    ModTabComponent,\n    ModTabInstalledComponent,\n    ModTabAvailableComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\t<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h3 class=\\\"text-center mb-5\\\">Please enter your Github private access token.</h3>\\n      <div id=\\\"loginForm\\\" class=\\\"form-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Github Access Token\\\" required minlength=\\\"38\\\" [(ngModel)]=\\\"model.gtoken\\\" id=\\\"gtoken\\\" #login=\\\"ngModel\\\">\\n      </div>\\n      <button type=\\\"button\\\" id=\\\"login\\\" class=\\\"btn mx-auto w-50 btn-info btn-block\\\" [disabled]=\\\"login.invalid\\\" (click)=\\\"onLogin()\\\">Login</button>\\n    </div>\\n  </div>\\n\\t<div [ngModel]=\\\"model\\\" *ngIf=\\\"model.error\\\" class=\\\"toast\\\" role=\\\"alert\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\">\\n    <div class=\\\"toast-header\\\">\\n      <div class=\\\"alert alert-danger\\\"></div>\\n      <strong class=\\\"mr-auto\\\">Error</strong>\\n      <button type=\\\"button\\\" class=\\\"ml-2 mb-1 close\\\" data-dismiss=\\\"toast\\\" aria-label=\\\"Close\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"toast-body\\\">\\n      Invalid token.\\n    </div>\\n\\t</div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from \"@angular/router\";\n\nconst httpOptions = {\n        headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './app.login.html',\n  styles: []\n})\nexport class LoginComponent {\n\n\tmodel = { \"gtoken\" : \"\", \"error\": false };\n\n\tconstructor(private http: HttpClient, private router: Router) { }\n\n\tonLogin() {\n\t\tthis.http.post(\"/verifyAccess\", { \"token\" : this.model.gtoken }, httpOptions).subscribe( data => this.verifyLogin(data));\n\t}\n\n\tverifyLogin(response) {\n\t\tif (response.status != 0) {\n\t\t\tthis.model.error = true;\n\t\t}\n\t\telse {\n\t\t\tthis.router.navigateByUrl('/modtab');\n\t\t}\n\t\t\t\n\t}\n\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\t<ul class=\\\"nav nav-pills\\\">\\n\\t\\t<li class=\\\"nav-item\\\">\\n\\t\\t\\t<a id=\\\"install\\\" class=\\\"nav-link\\\" [ngClass]=\\\"{'active': this.installToggle }\\\" (click)=\\\"navClick($event)\\\" [routerLink]=\\\"['/modtab']\\\">Installed</a>\\n\\t\\t</li>\\n\\t\\t<li class=\\\"nav-item\\\">\\n    \\t\\t\\t<a id=\\\"available\\\" class=\\\"nav-link\\\" [ngClass]=\\\"{'active': this.availableToggle }\\\" (click)=\\\"navClick($event)\\\" [routerLink]=\\\"['/modtab/modAvailable']\\\">Available</a>\\n  \\t\\t</li>\\n\\t</ul>\\n\\t<div class=\\\"inner-outlet\\\">\\n\\t\\t<router-outlet></router-outlet>\\n\\t</div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-modtab',\n  templateUrl: './app.modtab.html',\n  styles: []\n})\nexport class ModTabComponent {\n\n\tprivate installToggle: boolean = true;\n\tprivate availableToggle: boolean = false;\n\n\n\tconstructor(private http: HttpClient, private dataService: DataService) {}\n\n\tngOnInit() {\n\t\tlet mods = JSON.parse(localStorage.getItem('mods'));\n\t\tif (!mods) {\n\t\t\tthis.http.get('/populateModData').subscribe(data => this.populateData(data));\n\t\t}\n\t\telse {\n\t\t\tthis.populateData(mods);\n\t\t}\n\t}\n\n\tpopulateData(mods) {\n\t\tmods = mods.mods ? mods.mods : mods\n\t\tif (mods) {\n\t\t\tthis.dataService.addAll(mods);\n\t\t}\n\t}\n\n\tnavClick(event) {\n\t\tif (event.target.id == 'install') {\n\t\t\tthis.installToggle = true;\n\t\t\tthis.availableToggle = false;\n\t\t}\n\t\telse {\n\t\t\tthis.availableToggle = true;\n\t\t\tthis.installToggle = false;\n\t\t}\n\t}\n\n}\n","module.exports = \"<div *ngIf=\\\"dataAvailable | async\\\" class=\\\"container-fluid\\\">\\r\\n\\t<table  class=\\\"table table-dark\\\">\\r\\n\\t<thead>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<th>Name</th>\\r\\n\\t\\t\\t<th>Version</th>\\r\\n\\t\\t</tr>\\r\\n\\t</thead>\\r\\n\\t<tbody>\\r\\n\\t\\t<tr *ngFor=\\\"let mod of mods\\\">\\r\\n\\t\\t\\t<td>{{mod.name}}</td>\\r\\n\\t\\t\\t<td>{{mod.version}}</td>\\r\\n\\t\\t\\t<td><button type=\\\"button\\\" id=\\\"installMod\\\" class=\\\"btn mx-auto btn-info btn-block\\\" (click)=\\\"installMod(mod)\\\">Install</button></td>\\r\\n\\t\\t</tr>\\r\\n\\t</tbody>\\r\\n</table>\"","import { Component} from '@angular/core';\r\nimport { DataService } from '../services/data.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'available-tab',\r\n  templateUrl: './modtab.available.html'\r\n})\r\nexport class ModTabAvailableComponent {\r\n\r\n\tpublic hasAvailable: boolean;\r\n\tdataAvailable: Promise<boolean>;\r\n\tmods = [];\r\n\r\n\tconstructor(private http: HttpClient, private dataService: DataService) {}\r\n\r\n\r\n\tngOnInit() {\r\n\t\tthis.dataService.getObservable().subscribe( newVal => {\r\n\t\t\tif (newVal) {\r\n\t\t\t\tthis.mods = this.dataService.getModByInstalled(false);\r\n\t\t\t\tthis.hasAvailable = this.mods.length > 0;\r\n\t\t\t\tthis.dataAvailable = Promise.resolve(true);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tinstallMod(mod) {\r\n\t\tthis.http.post('/installMod', mod).subscribe(resp => this.handleInstallResponse(resp));\r\n\t}\r\n\r\n\thandleInstallResponse(resp) {\r\n\t\tif (resp) {\r\n\t\t\tthis.dataService.updateMods([resp]);\r\n\t\t}\r\n\t}\r\n\r\n}","module.exports = \"<div *ngIf=\\\"dataAvailable | async\\\" class=\\\"container-fluid\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<table class=\\\"table table-dark\\\">\\r\\n\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<th>Name</th>\\r\\n\\t\\t\\t\\t\\t<th>Version</th>\\r\\n\\t\\t\\t\\t\\t<th>Activate</th>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</thead>\\r\\n\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t<tr *ngFor=\\\"let mod of mods\\\">\\r\\n\\t\\t\\t\\t\\t<td>{{mod.name}}</td>\\r\\n\\t\\t\\t\\t\\t<td>{{mod.version}}</td>\\r\\n\\t\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t\\t\\t<form>\\r\\n  \\t\\t\\t\\t\\t\\t\\t<div class=\\\"custom-control custom-checkbox\\\">\\r\\n    \\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [checked]=\\\"mod.activated\\\" (change)=\\\"mod.activated = !mod.activated\\\" class=\\\"custom-control-input\\\" id=\\\"activate\\\">\\r\\n    \\t\\t\\t\\t\\t\\t\\t<label class=\\\"custom-control-label\\\" for=\\\"activate\\\"></label>\\r\\n  \\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t\\t<td *ngIf=\\\"mod.newVersion\\\"><button type=\\\"button\\\" id=\\\"updateMod\\\" class=\\\"btn mx-auto btn-info btn-block\\\" (click)=\\\"updateMod(mod)\\\">Install {{mod.newVersion}}</button></td>\\r\\n\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t</tbody>\\r\\n\\t\\t</table>\\r\\n\\t</div>\\r\\n\\t<div *ngIf=\\\"mods.length > 0\\\" class=\\\"row\\\">\\r\\n\\t\\t<button type=\\\"button\\\" id=\\\"checkUpdates\\\" class=\\\"btn mx-auto w-50 btn-info btn-block\\\" (click)=\\\"checkUpdates()\\\">Check For Updates</button>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"row mt-5\\\">\\r\\n\\t\\t<button type=\\\"button\\\" id=\\\"launchPoE\\\" class=\\\"btn mx-auto btn-info btn-block\\\" (click)=\\\"launchPoE()\\\">Launch Path of Exile</button>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"modal\\\" id=\\\"preLaunch\\\">\\r\\n\\t\\t<div class=\\\"modal-dialog\\\">\\r\\n\\t  \\t\\t<div class=\\\"modal-content\\\">\\r\\n\\t\\t    \\t<div class=\\\"modal-header\\\">\\r\\n\\t      \\t\\t\\t<h4 class=\\\"modal-title\\\">Pre-Launch Details</h4>\\r\\n\\t\\t\\t    </div>\\r\\n\\t  \\t\\t    <div class=\\\"modal-body\\\">\\r\\n\\t        \\t\\t<div class=\\\"form-group\\\">\\r\\n\\t  \\t\\t\\t\\t\\t<label for=\\\"poePath\\\">Path to executable</label>\\r\\n\\t  \\t\\t\\t\\t\\t<input type=\\\"text\\\" requried [(ngModel)]=\\\"this.poePath\\\"class=\\\"form-control\\\" id=\\\"poePath\\\" #installed=\\\"ngModel\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t  \\t\\t\\t\\t\\t<label for=\\\"poeAHK\\\">Path to AHK</label>\\r\\n\\t  \\t\\t\\t\\t\\t<input type=\\\"text\\\" required [(ngModel)]=\\\"this.ahkPath\\\"class=\\\"form-control\\\" id=\\\"ahkPath\\\">\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"modal-footer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"submit\\\" id=\\\"launch\\\" class=\\\"btn mx-auto w-50 btn-info btn-block\\\" [disabled]=\\\"installed.invalid\\\" (click)=\\\"launchPoE()\\\">Launch</button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t      \\t\\t</div>\\r\\n\\t  \\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"modalButton\\\" [hidden]=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#preLaunch\\\">\\r\\n  \\t\\tOpen modal\\r\\n\\t</button>\\r\\n</div>\"","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs/';\nimport { HttpClient } from '@angular/common/http';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'installed-tab',\n  templateUrl: './modtab.installed.html'\n})\nexport class ModTabInstalledComponent {\n\n\tdataAvailable: Promise<boolean>;\n\tpublic hasInstalled: boolean;\n\tpoePath: string;\n\tahkPath: string;\n\tmods = [];\n\n\tconstructor(private http: HttpClient, private dataService: DataService) {}\n\n\n\tngOnInit() {\n\t\tthis.dataService.getObservable().subscribe( newVal => {\n\t\t\tif (newVal) {\n\t\t\t\tthis.mods = this.dataService.getModByInstalled(true);\n\t\t\t\tthis.hasInstalled = this.mods.length > 0;\n\t\t\t\tthis.dataAvailable = Promise.resolve(true);\n\t\t\t}\n\t\t});\n\t}\n\n\tcheckUpdates() {\n\t\tthis.http.post(\"/checkUpdates\", this.mods).subscribe(resp => {\n\t\t\tthis.handleCheckUpdates(resp);\n\t\t});\n\t}\n\n\thandleCheckUpdates(resp) {\n\t\tif (resp.status == 0) {\n\t\t\tthis.dataService.updateMods(resp.mods);\n\t\t\tthis.mods = resp.mods;\n\t\t}\n\t}\n\n\tlaunchPoE() {\n\t\tlet poePath = localStorage.getItem('poePath');\n\t\tlet ahkPath = localStorage.getItem('ahkPath');\n\t\tlet actualPoe = poePath || this.poePath;\n\t\tlet actualAhk = ahkPath || this.ahkPath;\n\t\tif (!actualPoe || !actualAhk) {\n\t\t\tlet element = document.getElementById('modalButton') as HTMLElement;\n\t\t\telement.click();\n\t\t}\n\t\telse {\n\t\t\tlocalStorage.setItem('poePath', actualPoe);\n\t\t\tlocalStorage.setItem('ahkPath', actualAhk);\n\t\t\tlet activatedMods = this.mods.filter(mod => {\n\t\t\t\treturn mod.activated;\n\t\t\t});\n\t\t\tlet request = {\n\t\t\t\t'poePath' : actualPoe,\n\t\t\t\t'ahkPath' : actualAhk,\n\t\t\t\t'activatedMods' : activatedMods\n\t\t\t};\n\t\t\tif (activatedMods.length > 0){\n\t\t\t\tthis.dataService.updateMods(activatedMods);\n\t\t\t} \n\t\t\tthis.http.post(\"/runGame\", request).subscribe(data => {\n\t\t\t\tthis.handleLaunch(data);\n\t\t\t});\n\t\t}\n\t}\n\n\thandleLaunch(resp) {\n\n\t}\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export class Mod {\n\n\tconstructor(\t\t\n\t\tpublic name: string,\n\t\tpublic version: string,\n\t\tpublic installed: boolean,\n\t\tpublic newVersion: string,\n\t\tpublic activated: boolean,\n\t\tpublic executeType: string,\n\t\tpublic executablePath: string,\n\t\tpublic downloadUrls: Array<string>) {}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Mod } from '../model/mod';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable()\nexport class DataService {\n\n\tprivate mods: Array<Mod>;\n\tobservableMods: BehaviorSubject<Mod[]>;\n\n\tconstructor() {\n\t\tthis.observableMods = new BehaviorSubject<Mod[]>(this.mods);\n\t}\n\n\tprivate addMod(mod) {\n\t\tlet newMod = new Mod(mod.name, mod.version, \n\t\t\tmod.installed, mod.newVersion, mod.activated, \n\t\t\tmod.executeType, mod.executablePath, mod.downloadUrls);\n\t\tif (this.mods && this.mods.indexOf(newMod) == -1) {\n\t\t\tthis.mods.push(newMod);\n\t\t}\n\t\telse {\n\t\t\tthis.mods = [];\n\t\t\tthis.mods.push(newMod);\n\t\t}\n\t}\n\n\taddAll(mods) {\n\t\tfor (let mod of mods) {\n\t\t\tthis.addMod(mod);\n\t\t}\n\t\tconsole.log(\"Calling mods changed\");\n\t\tthis.modsChanged();\n\t}\n\n\tgetObservable() {\n\t\treturn this.observableMods;\n\t}\n\n\tloadToBrowser() {\n\t\tlocalStorage.setItem('mods', JSON.stringify(this.mods));\n\t}\n\n\tmodsChanged() {\n\t\tthis.observableMods.next(this.mods);\n\t\tthis.loadToBrowser();\n\t}\n\n\tgetModByName(name) {\n\t\treturn this.mods.filter(mod => mod.name === name);\n\t}\n\n\tgetModByInstalled(installed): Array<Mod> {\n\t\tlet test = this.mods.filter(mod => {\n\t\t\treturn mod.installed == installed;\n\t\t});\n\t\treturn test;\n\t}\n\n\tprivate updateMod(mod) {\n\t\tthis.mods[this.mods.findIndex(({name}) => name === mod.name)] = mod;\n\t\tconsole.log(\"UPDATED MODS\");\n\t\tconsole.log(this.mods);\n\t}\n\n\tupdateMods(mods) {\n\t\tfor (let mod of mods) {\n\t\t\tthis.updateMod(mod);\n\t\t}\n\t\tthis.modsChanged();\n\t}\n\n}\n"],"sourceRoot":""}